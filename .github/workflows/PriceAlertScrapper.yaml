name: Build and Deploy All Services to ECS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service_name: scrape-cs-items
            ecr_image_var: ${{ vars.ECR_SCRAPPER_IMAGE }}
            ecs_service: ${{ vars.ECS_SCRAPPER_SERVICE }}
          - service_name: alerts
            ecr_image_var: ${{ vars.ECR_ALERTS_IMAGE }}
            ecs_service: ${{ vars.ECS_ALERTS_SERVICE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login \
            --username AWS \
            --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_DEFAULT_REGION }}.amazonaws.com

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image (${{ matrix.service_name }})
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --target ${{ matrix.service_name }} \
            -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_DEFAULT_REGION }}.amazonaws.com/${{ matrix.ecr_image_var }}:latest \
            --push .

      - name: Deploy ${{ matrix.service_name }} to ECS
        run: |
          aws ecs update-service \
            --cluster ${{ vars.ECS_CLUSTER }} \
            --service ${{ matrix.ecs_service }} \
            --force-new-deployment